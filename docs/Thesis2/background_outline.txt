Introduction
    Question how to segment a trees and other vegetation from pointclouds?
    How does one leverage user input and feedback?
    Can one perform user aided segmentation at interactive rates?

Input description
    Pointcloud data can be produced by many types of devices:
        Sonar, radar, structure from motion, Lidar, Triangulation

    Lidar
        Measure time for laser beam to bounce of object.
        Used at different ranges
            Long, medium and short range
        Higher resolution scans every year
            16 million points average at Zamani
        Returns XYZ and Reflectance value for every point.
        Can also return point RGB values and GPS coordinates of the scanner.
        The intensity value is affected by attenuation, angle of incidence and reflectance properties xof the surface.
        It is affected to a lesser degree by ambient light conditions.
        Measurement jitter increases along the depth axis away from the scanner.
        Surfaces are non uniformly sampled.
        Range scans have dense grid structure that contains placeholder points for missing samples.
        This grid structure can be used to efficiently find neighboring samples and estimate point normals.
        The grid structure allows one to analyze range scans using both 2D and 3D methods.

    Noise
        Unwanted artifacts in range scans
        System noise
            Jitter (could be removed with Fourier transform?)
            Mixed points?
                Half the laser hits object in foreground and half hits the object in the background, results in average point.

        Moving noise
            Birds flying through a scan
            People walking through a scan
            (need to describe the effects it has on a scan)

        Stationary noise:
            Misplaced equipment
            People
            Trees and other vegetation

    Characteristics of heritage scenes
        Ruins
            Eroded surfaces
            Not always regular
        Overgrown
            Lots of weeds and grass
            Vegetation growing against eroded walls
            Hard to tell wall from tree

    Noise is spacially coherent


Segmentation
    Segmentation is to classify image elements into a small number of homogeneous classes based on some image characteristics.
    The human brain is very good at segmenting visual information.
    It does this by taking intensity and color responses from the retina and processes them in both a bottom up and top down manner.
    Low level features like edges are detected first and built up into higher level constructs.
    Knowledge about the world is them imposed upon low level constructs to make sense of stimuli.
    These ideas are very useful in helping us segment images such as range scans.

    Given the dualistic nature of range scans, techniques from both 2d and 3d segmentation literature are relevant.
    Image features are at the bottom of the segmentation process.

    Features:

        - Image gradient, Canny edges, Laplace, Sobel
            Can be used with depth maps and intensity images
            Used to find edges
            Can be used to find end of regular walls
            Ruins are unlikely to have regular walls
            Trees also have lots of edges
            Not very useful by itself

        - Image normals
            PCA can be used but very expensive
                Good for unstructured data
            Efficiently calculated via grid structure
                Missing points are problematic
                (Find paper on this)
            Trees should have noisy normals
            Flat surfaces should have normals that point in a vaguely similar direction

        - FPFH
            Builds on normals
            Good for discriminating between primitive geometric shapes
            Can be costly to compute over a large scan
            Down sampling helps

        - Principal curvatures
            ...

        - PCA
            (If I have the normals, PCA is useless?)
            Along which axis points are distributed
            Used in heritage paper
            Find:
                Corners
                Edges
                Planes

        - Textures:
            A local pattern
            Somewhat higher level feature
            Think in terms of the process that created the texture

            Simple element is a texon
            Regular textures vs stochastic textures

            Regular textures:
                Texons roughly distributed in a grid
                Grid might be deformed in some way
                Example polka dots on a dress

            Stochastic textures
                Texture generated by random process
                Texons are not very useful things to identify
                Histograms are used to calculate a distribution

            Hybrid textures
                A bit stochastic and a bit regular, hard to segment.

            Changes in texture delineate boundaries.

            Tree bark has a somewhat regular texture.
            Leafs are also

            Successfully used with medical segmentation
            Images appear to be similar to pointcloud intensity values.

            Algorithms that use textures can be expensive (Global optimization)


        - Intensity values
            Outline that paper where light models are used to extract surface properties.

        - Multi resolution analysis
            Difference of gaussians
            Difference of normals

        - Heuristic features
            I made this word up? Should try find this in the literature
            Use existing features to determine the the probability if a point is of a certain class
            Use it with machine learning


    Algorithms:
        Global optimization vs Local optimization
        User driven vs automated
        Cheap vs expensive


        Machine learning:
            Machine learning can either be regression or classification problem
            Segmentation is a classification problem

            Supervised:
                Prior knowledge is required
                Can be supplied by the user (Top down)

                Problem is that features need to be learned
                This assumes the availibility of training sets appropriate for the scene
                Training can be time consuming
                Not feasible to do this for large training sets
                Leaning by pointing out an example could be feasible
                Colour different regions with labels and then segment?

                - K-means clustering



            Unsupervised:
                - Markov random fields
                - Decision trees
                    Can be user driven
                - Random forests
                    Highly parallelism
                - SVM

        - Region growing
            User driven
            Start with a seed point
            Add neighbors if they meet the membership criteria
            Any features can be used
            Discussion of all the results in literature

        - Watershed
            Can be user driven
            Hierarchical segmentation
            Haven't considered this
            Read more and add

        - Energy minimization
            - Deformable contours
                User driven
                Top down
                For simple topological shapes
            - Graph cuts
                Good for spatially isolated objects
                Hard to guess parameters
            - 

        - Level set methods
            My brain hurts from these



Sidenotes:
    Properties of objects in scan
    Properties of noise
    Features that can be used to distingues between thems Z
